version: '3.8'

services:
  nextdash-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      # App Configuration
      - NEXT_PUBLIC_APP_NAME=NextDash-B
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - NODE_ENV=production
      
      # Database Configuration (External - Hostinger)
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-3306}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SSL=${DB_SSL:-false}
      
      # Authentication
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1h}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      
      # Email Configuration
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
      
      # Worker Configuration
      - WORKER_ENABLED=${WORKER_ENABLED:-true}
      - WORKER_INTERVAL=${WORKER_INTERVAL:-60000}
      
      # Security
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS:-12}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-15}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      
      # Admin Users
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_FIRST_NAME=${ADMIN_FIRST_NAME}
      - ADMIN_LAST_NAME=${ADMIN_LAST_NAME}
      - ADMIN2_EMAIL=${ADMIN2_EMAIL}
      - ADMIN2_PASSWORD=${ADMIN2_PASSWORD}
      - ADMIN2_FIRST_NAME=${ADMIN2_FIRST_NAME}
      - ADMIN2_LAST_NAME=${ADMIN2_LAST_NAME}
    volumes:
      - uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - nextdash-network

  # Optional: Redis for caching and job queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - nextdash-network
    command: redis-server --appendonly yes

  # Optional: Worker service for background jobs
  nextdash-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      # Database Configuration
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-3306}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SSL=${DB_SSL:-false}
      
      # Redis Configuration
      - REDIS_URL=redis://redis:6379
      
      # Email Configuration
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
      
      # Worker Configuration
      - WORKER_ENABLED=${WORKER_ENABLED:-true}
      - WORKER_INTERVAL=${WORKER_INTERVAL:-60000}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - redis
      - nextdash-app
    networks:
      - nextdash-network

volumes:
  uploads:
  redis_data:
  logs:

networks:
  nextdash-network:
    driver: bridge